{"version":3,"file":"static/js/623.1305ffc8.chunk.js","mappings":"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","sources":["components/AppIcons.jsx","components/Book.jsx","components/OverlayMenu.jsx"],"sourcesContent":["import \"./appicons.css\";\nimport React from \"react\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport { AiOutlineUnorderedList } from \"react-icons/ai\";\nimport { AiOutlineLeft } from \"react-icons/ai\";\nimport { AiOutlineRight } from \"react-icons/ai\";\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport { AiOutlineSetting } from \"react-icons/ai\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { collapseMenu } from \"./OverlayMenu\";\n\nexport const HomeIcon = (props) => {\n    return (\n            <Link className=\"icon-link\" to=\"/\">\n                <AiFillHome className=\"icon\" />\n                <small className=\"icon-label\">\n                       {props.label}\n                </small>\n            </Link>\n    )\n}\n\nexport const TocIcon = (props) => {\n    return (\n            <Link className=\"icon-link\" to=\"/toc\">\n                <AiOutlineUnorderedList className=\"icon\" />\n                <small className=\"icon-label\">\n                       {props.label}\n                </small>\n            </Link>\n    )\n}\n\nexport const InfoIcon = (props) => {\n    return (\n        <Link className=\"icon-link\" to=\"/about\">\n           <AiOutlineInfoCircle className=\"icon\" />\n            <small className=\"icon-label\">\n                {props.label}\n            </small>\n        </Link>\n    )\n}\n\nexport const SearchIcon = (props) => {\n    return (\n            <Link className=\"icon-link\" to=\"/search\">\n                <AiOutlineSearch className=\"icon\" />\n                <small className=\"icon-label\">{props.label}</small>\n            </Link>\n    )\n}\n\nexport const SettingsIcon = (props) => {\n    return (\n            <Link className=\"icon-link\" to=\"/settings\">\n                <AiOutlineSetting className=\"icon\" />\n                <small className=\"icon-label\">\n                    {props.label}\n                </small>\n            </Link>\n    )\n}\n\nexport const ArrowLeftIcon = (props) => {\n    const isDisabled = props.disabled;\n    let iconColor = \"\";\n    if (isDisabled) {\n        iconColor = \"#bdbbbb\";\n    }\n    return <AiOutlineLeft className=\"arrow-icon\"\n        style={{ color: iconColor }}\n    />\n}\n\nexport const ArrowRightIcon = (props) => {\n    const isDisabled = props.disabled;\n    let iconColor = \"\";\n    if (isDisabled) {\n        iconColor = \"#bdbbbb\";\n    }\n    return <AiOutlineRight className=\"arrow-icon\"\n        style={{ color: iconColor }}\n    />\n}\n\nexport const CloseIcon = () => {\n    return (\n        <div onClick={ () => {\n            collapseMenu();\n            window.history.back() }\n        }>\n            <AiOutlineClose className=\"close-icon\" />\n        </div>\n    )\n}\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CloseIcon } from \"./AppIcons\";\nimport VersesContext from \"../contexts/BibleContext\";\n\nimport { Swiper, useSwiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/navigation\";\nimport \"./swiper_styles.css\";\nimport { Pagination, Navigation } from \"swiper\";\n\nimport loadable from \"@loadable/component\";\nconst Chapter = loadable(() => import(\"./Chapter\"));\n\n\nfunction Book() {\n    const { biblija, books, getBookChapters, bookChapters } = useContext(VersesContext);\n    const [chapterVerses, setChapterVerses] = useState([]);\n\n    const { book } = useParams();\n\n    const [readWhat, setReadWhat] = useState({\n        \"book\": book,\n        \"chapter\": 1,\n    });\n\n    const hasChapters = useRef(false);\n\n    const SwiperPosition = () => {\n        const swiper = useSwiper();\n\n        // Get from the Bible only selected book (and the chapter)\n        useEffect(() => {\n                if (!hasChapters.current) {\n                    // Get verses in a book chapter\n                    setChapterVerses(biblija.filter(item => (\n                        item.book === readWhat.book & item.chapter === Number(readWhat.chapter)\n                    )));\n                    // Get the array of a book's chapters\n                    getBookChapters(readWhat.book);\n                    //Move slide\n                    const index = Number(readWhat.chapter)-1;\n                    swiper.slideTo(index);\n                }\n                hasChapters.current = true;\n        }, [swiper])\n        \n        return(<></>)\n    }\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n\n        setReadWhat(prevRead => {\n            if (name === \"book\") {\n                return {\"book\": value, \"chapter\": 1};\n            }\n            else {\n                 return {\n                    ...prevRead,\n                    [name]: value\n                };\n            }\n        });\n        hasChapters.current = false; \n    }\n\n    function handleSwipe(chptr) {\n        setReadWhat(prevVal => {\n            return{...prevVal, chapter: chptr}\n        });\n        hasChapters.current = false;\n    }\n\n    \n    return(\n        <div>\n            <div className=\"navbar\">\n                <div className=\"nav-item vertical-center\">\n                  <select id=\"book-select\" name=\"book\" value={readWhat.book} onChange={handleChange}>\n                    {books.map(\n                            book => <option key={book.eng_short} value={book.eng_short}>{book.name}</option>\n                        )\n                    }\n                  </select>\n\n                  <select id=\"chapter-select\" name=\"chapter\" value={readWhat.chapter} onChange={handleChange}>\n                    {bookChapters.map(\n                            chapter => <option key={chapter} value={chapter}>{chapter}</option>\n                        )\n                    }\n                  </select>\n                </div>\n                <div className=\"close-page\"><CloseIcon /></div>\n            </div>\n\n            <Swiper\n                pagination={{\n                    type: \"fraction\",\n                }}\n                navigation={true}\n                modules={[Pagination, Navigation]}\n                onSlideChange={(swiper) => {\n                        // console.log(swiper.realIndex)\n                        handleSwipe(swiper.activeIndex + 1)\n                    }}\n                // onSwiper={(swiper) => console.log(swiper)}\n                className=\"mySwiper\"\n            >\n            <SwiperPosition />\n            {\n                bookChapters.map((chptr) => {\n\n                    return  (\n                        <SwiperSlide key={chptr}>\n                            <Chapter\n                                books={books}\n                                book={readWhat.book} chapter={readWhat.chapter}\n                                verses={chapterVerses}\n                            />\n                        </SwiperSlide>\n                    )\n                })\n            }\n            </Swiper>\n        </div>\n    )\n}\n\nexport default Book;","import \"./overlaymenu.css\";\nimport { HomeIcon } from \"./AppIcons\";\nimport { InfoIcon } from \"./AppIcons\";\nimport { SearchIcon } from \"./AppIcons\";\nimport { SettingsIcon } from \"./AppIcons\";\nimport { TocIcon } from \"./AppIcons\";\nimport React from \"react\";\n\nexport const collapseMenu = () => {\n        document.getElementById(\"menu-overlay-toggle\").checked = false;\n    }\n\nfunction OverlayMenu() {\n    return (\n        <div id=\"menu-overlay\">\n          <input type=\"checkbox\" id=\"menu-overlay-toggle\" name=\"menu-overlay-toggle\" aria-labelledby=\"menu-overlay-toggle\" />\n            <label htmlFor=\"menu-overlay-toggle\"></label>\n          <ul>\n            <li>\n              <div onClick={collapseMenu}>\n                <HomeIcon label={\"Naslovnica\"} />\n              </div>\n            </li><li>\n              <div onClick={collapseMenu}>\n                <TocIcon label={\"Sadržaj\"} />\n              </div>\n            </li><li>\n              <div onClick={collapseMenu}>\n                <SearchIcon label={\"Traženje pojma\"} />\n              </div>\n            </li><li>\n              <div onClick={collapseMenu}>\n                <SettingsIcon label={\"Podešavanje\"} />\n              </div>\n            </li><li>\n              <div onClick={collapseMenu}>\n                <InfoIcon label={\"O aplikaciji\"} />\n              </div>\n            </li>\n          </ul>\n        </div>\n    )\n}\n\nexport default OverlayMenu;"],"names":["HomeIcon","props","className","to","label","TocIcon","InfoIcon","SearchIcon","SettingsIcon","CloseIcon","onClick","collapseMenu","window","history","back","Chapter","loadable","useContext","VersesContext","biblija","books","getBookChapters","bookChapters","useState","chapterVerses","setChapterVerses","book","useParams","readWhat","setReadWhat","hasChapters","useRef","SwiperPosition","swiper","useSwiper","useEffect","current","filter","item","chapter","Number","index","slideTo","handleChange","event","target","name","value","prevRead","id","onChange","map","eng_short","pagination","type","navigation","modules","Pagination","Navigation","onSlideChange","chptr","activeIndex","prevVal","verses","document","getElementById","checked","htmlFor"],"sourceRoot":""}